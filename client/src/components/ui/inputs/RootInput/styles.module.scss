@use '@/styles/mixins.scss' as mixins;

.label {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 8rem;
	position: relative;

	// disable autofill
	input[type='password'] {
		-webkit-text-fill-color: var(--text) !important;
		background-color: var(--bgDark) !important;
		background-image: none !important;
	}

	// disable autofill in Chrome/Safari/Edge
	input[type='password']:-webkit-autofill,
	input[type='password']:-webkit-autofill:hover,
	input[type='password']:-webkit-autofill:focus,
	input[type='password']:-webkit-autofill:active {
		-webkit-text-fill-color: var(--text) !important;
		background-color: var(--bgDark) !important;
		background-image: none !important;
		transition: background-color 5000s ease-in-out 0s !important;
	}

	input {
		resize: none;
		width: 100%;
		padding: 15rem;
		padding-right: 40rem;
		@include mixins.font(500, 18rem, 120%);
		border-radius: 10rem;
		border: 1rem solid transparent;
		transition: all 0.15s ease-in-out;
		color: var(--text);
		box-shadow: var(--shadowOuter);
		background: var(--bgDark);

		&:focus {
			background: var(--bgLight);
			box-shadow: var(--shadowInner);
		}

		&:disabled {
			cursor: default;
			pointer-events: none;

			~ svg {
				cursor: default;
				pointer-events: none;
			}
		}
	}

	textarea {
		resize: none;
		width: 100%;
		padding: 15rem;
		padding-right: 40rem;
		@include mixins.font(500, 18rem, 120%);
		border-radius: 10rem;
		border: 1rem solid transparent;
		transition: all 0.15s ease-in-out;
		color: var(--text);
		box-shadow: var(--shadowOuter);
		background: var(--bgDark);

		&:focus {
			background: var(--bgLight);
			box-shadow: var(--shadowInner);
		}

		&:disabled {
			cursor: default;
			pointer-events: none;

			~ svg {
				cursor: default;
				pointer-events: none;
			}
		}
	}

	input[type='checkbox'] {
		display: none;

		&:checked {
			~ div {
				i {
					background: var(--bgDark);
					box-shadow: var(--shadowInner);

					svg {
						stroke: var(--primaryHov);
						opacity: 1;
					}
				}
			}
		}
	}

	p {
		color: var(--red);
	}

	span {
		opacity: 0.5;
	}

	@include mixins.tablet {
		gap: 6rem;

		input {
			padding: 10rem;
			padding-right: 20rem;
			@include mixins.font(500, 16rem, 120%);
		}

		textarea {
			padding: 10rem;
			padding-right: 20rem;
			@include mixins.font(500, 16rem, 120%);
		}
	}
}

.label_checkbox {
	display: flex;
	align-items: center;
	gap: 16rem;
	cursor: pointer;

	a {
		text-decoration: underline;
		color: var(--primaryDef);
		transition: all 0.15s ease-in-out;

		&:hover {
			color: var(--primaryHov);
		}
	}

	span {
		opacity: 1;
	}

	i {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 32rem;
		height: 32rem;
		border-radius: 10rem;
		border: 1rem solid transparent;
		background: var(--bgLight);
		box-shadow: var(--shadowOuter);

		svg {
			width: 18rem;
			height: 14rem;
			stroke: var(--text);
			stroke-width: 3rem;
			opacity: 0.5;
		}
	}
}

.label_control {
	width: 100%;
	gap: 16rem;
	display: flex;
	align-items: center;
	justify-content: space-between;

	@include mixins.tablet {
		gap: 12rem;
	}
}

.label_error {
	position: relative;

	input,
	textarea {
		border: 1rem solid var(--red);
	}

	svg {
		width: 28rem;
		height: 28rem;
		position: absolute;
		right: 15rem;
		top: 40rem;
	}

	@include mixins.tablet {
		svg {
			width: 20rem;
			height: 20rem;
			right: 10rem;
			top: unset;
			bottom: 14rem;
		}
	}
}

.label_warning {
	position: relative;

	input,
	textarea {
		border: 1rem solid #ff7a00;
	}

	svg {
		width: 28rem;
		height: 28rem;
		position: absolute;
		right: 15rem;
		top: 40rem;
	}

	p {
		text-align: right;
		color: #ff7a00;
	}

	@include mixins.tablet {
		svg {
			width: 20rem;
			height: 20rem;
			right: 10rem;
			top: unset;
			bottom: 14rem;
		}
	}
}
