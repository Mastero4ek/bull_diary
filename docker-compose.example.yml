services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: diary-server-dev
    ports:
      - '5001:5001'
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=${NODE_ENV:-dev}
      - MONGO_URI=${MONGO_URI}
      - SECRETS_PROVIDER=${SECRETS_PROVIDER:-env}
      - SECRET_ID=${SECRET_ID}
      - VAULT_ENDPOINT=${VAULT_ENDPOINT}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - ENCRYPTION_SECRET_KEY=${ENCRYPTION_SECRET_KEY}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongo_dev
      - redis
      - vault
    command: npm run dev
    networks:
      - diary-network
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: diary-client-dev
    ports:
      - '5173:5173'
    env_file:
      - ./server/.env
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    command: npm run dev -- --host 0.0.0.0
    networks:
      - diary-network
    restart: unless-stopped

  vault:
    image: hashicorp/vault:latest
    container_name: diary-vault
    ports:
      - '8200:8200'
    env_file:
      - ./server/.env
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_DEV_ROOT_TOKEN_ID}
      - VAULT_DEV_LISTEN_ADDRESS=${VAULT_DEV_LISTEN_ADDRESS}
    volumes:
      - vault_data:/vault/data
    command: vault server -dev
    networks:
      - diary-network
    restart: unless-stopped

  mongo_dev:
    image: mongo:latest
    container_name: diary-mongo-dev
    ports:
      - '27017:27017'
    volumes:
      - mongo_dev_data:/data/db
    env_file:
      - ./server/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    command: mongod --auth --bind_ip_all
    networks:
      - diary-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: diary-redis
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    env_file:
      - ./server/.env
    command: redis-server
    networks:
      - diary-network
    restart: unless-stopped

volumes:
  mongo_dev_data:
  redis_data:
  vault_data:

networks:
  diary-network:
    driver: bridge
